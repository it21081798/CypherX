{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thami\\\\Dropbox\\\\PC\\\\Desktop\\\\Kanban Board\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport KanbanBoard from './components/KanbanBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KANBAN_API_URL = 'http://localhost:5000/tickets';\nconst USER_PREFERENCES_API_URL = 'http://localhost:5000/user-preferences';\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortBy, setSortBy] = useState('priority');\n  const [groupedAndSortedTickets, setGroupedAndSortedTickets] = useState([]);\n  const fetchAndUpdateTickets = () => {\n    const apiUrl = `${KANBAN_API_URL}?groupingOption=${groupingOption}&sortBy=${sortBy}`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      // Update the tickets state\n      setTickets(data);\n\n      // Perform grouping and sorting\n      const groupedAndSortedData = groupAndSortTickets(data);\n\n      // Update the state with grouped and sorted data\n      setGroupedAndSortedTickets(groupedAndSortedData);\n    }).catch(error => console.error('Error fetching and updating tickets:', error));\n  };\n  useEffect(() => {\n    // Fetch data from the API\n    fetch(KANBAN_API_URL).then(response => response.json()).then(data => setTickets(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  useEffect(() => {\n    fetch(USER_PREFERENCES_API_URL).then(response => response.json()).then(data => {\n      if (data) {\n        const {\n          groupingOption,\n          sortBy\n        } = data;\n        setGroupingOption(groupingOption);\n        setSortBy(sortBy);\n      }\n    }).catch(error => console.error('Error fetching user preferences:', error));\n  }, []);\n  useEffect(() => {\n    const userPreferences = {\n      groupingOption,\n      sortBy\n    };\n    fetch(USER_PREFERENCES_API_URL, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userPreferences)\n    }).then(response => response.json()).then(data => console.log('User preferences updated:', data)).catch(error => console.error('Error updating user preferences:', error));\n  }, [groupingOption, sortBy]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Group By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: groupingOption,\n        onChange: e => setGroupingOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"status\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sort By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert('Display button clicked!'),\n      children: \"Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      groupedAndSortedTickets: groupedAndSortedTickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"vsJUxVWerIqK38dyw9xgiy4CtXQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","KanbanBoard","jsxDEV","_jsxDEV","KANBAN_API_URL","USER_PREFERENCES_API_URL","App","_s","tickets","setTickets","groupingOption","setGroupingOption","sortBy","setSortBy","groupedAndSortedTickets","setGroupedAndSortedTickets","fetchAndUpdateTickets","apiUrl","fetch","then","response","json","data","groupedAndSortedData","groupAndSortTickets","catch","error","console","userPreferences","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/thami/Dropbox/PC/Desktop/Kanban Board/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport KanbanBoard from './components/KanbanBoard';\nimport './App.css';\n\nconst KANBAN_API_URL = 'http://localhost:5000/tickets';\nconst USER_PREFERENCES_API_URL = 'http://localhost:5000/user-preferences';\n\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortBy, setSortBy] = useState('priority');\n  const [groupedAndSortedTickets, setGroupedAndSortedTickets] = useState([]);\n\n  const fetchAndUpdateTickets = () => {\n    \n    const apiUrl = `${KANBAN_API_URL}?groupingOption=${groupingOption}&sortBy=${sortBy}`;\n  \n    \n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the tickets state\n        setTickets(data);\n  \n        // Perform grouping and sorting\n        const groupedAndSortedData = groupAndSortTickets(data);\n  \n        // Update the state with grouped and sorted data\n        setGroupedAndSortedTickets(groupedAndSortedData);\n      })\n      .catch((error) => console.error('Error fetching and updating tickets:', error));\n  };\n  \n\n  useEffect(() => {\n    // Fetch data from the API\n    fetch(KANBAN_API_URL)\n      .then((response) => response.json())\n      .then((data) => setTickets(data))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  useEffect(() => {\n    fetch(USER_PREFERENCES_API_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data) {\n          const { groupingOption, sortBy } = data;\n          setGroupingOption(groupingOption);\n          setSortBy(sortBy);\n        }\n      })\n      .catch((error) => console.error('Error fetching user preferences:', error));\n  }, []);\n\n  useEffect(() => {\n  const userPreferences = { groupingOption, sortBy };\n\n \n  fetch(USER_PREFERENCES_API_URL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userPreferences),\n  })\n    .then((response) => response.json())\n    .then((data) => console.log('User preferences updated:', data))\n    .catch((error) => console.error('Error updating user preferences:', error));\n}, [groupingOption, sortBy]);\n  \nreturn (\n  <div className=\"App\">\n    <div>\n      <label>Group By:</label>\n      <select value={groupingOption} onChange={(e) => setGroupingOption(e.target.value)}>\n        <option value=\"status\">Status</option>\n        <option value=\"user\">User</option>\n        <option value=\"priority\">Priority</option>\n      </select>\n    </div>\n    <div>\n      <label>Sort By:</label>\n      <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n        <option value=\"priority\">Priority</option>\n        <option value=\"title\">Title</option>\n      </select>\n    </div>\n    <button onClick={() => alert('Display button clicked!')}>Display</button>\n\n\n\n    <KanbanBoard groupedAndSortedTickets={groupedAndSortedTickets} />\n  </div>\n);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}